{"version":3,"file":"httpErrors.js","sourceRoot":"","sources":["httpErrors.ts"],"names":[],"mappings":";;AAAA,MAAsB,eAAgB,SAAQ,KAAK;IAIjD,YAAY,OAAwB;QAClC,IAAI,OAAO,YAAY,MAAM,EAAE;YAC7B,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC;aAAM;YACL,KAAK,CAAC,OAAO,CAAC,CAAC;SAChB;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;CACF;AAdD,0CAcC;AAED,MAAa,YAAa,SAAQ,eAAe;IAE/C,YAAY,UAA2B,aAAa;QAClD,KAAK,CAAC,OAAO,CAAC,CAAC;QAFR,eAAU,GAAG,GAAG,CAAC;IAG1B,CAAC;CACF;AALD,oCAKC;AAED,MAAa,YAAa,SAAQ,eAAe;IAE/C,YAAY,UAA2B,WAAW;QAChD,KAAK,CAAC,OAAO,CAAC,CAAC;QAFR,eAAU,GAAG,GAAG,CAAC;IAG1B,CAAC;CACF;AALD,oCAKC","sourcesContent":["export abstract class HTTPClientError extends Error {\n  readonly statusCode!: number;\n  readonly name!: string;\n\n  constructor(message: string | Object) {\n    if (message instanceof Object) {\n      super(JSON.stringify(message));\n    } else {\n      super(message);\n    }\n\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nexport class HTTP400Error extends HTTPClientError {\n  readonly statusCode = 400;\n  constructor(message: string | Object = 'Bad Request') {\n    super(message);\n  }\n}\n\nexport class HTTP404Error extends HTTPClientError {\n  readonly statusCode = 404;\n  constructor(message: string | Object = 'Not Found') {\n    super(message);\n  }\n}\n"]}