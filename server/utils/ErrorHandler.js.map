{"version":3,"file":"ErrorHandler.js","sourceRoot":"","sources":["ErrorHandler.ts"],"names":[],"mappings":";;AACA,6CAA6D;AAEhD,QAAA,aAAa,GAAG,GAAG,EAAE;IAChC,MAAM,IAAI,yBAAY,CAAC,kBAAkB,CAAC,CAAC;AAC7C,CAAC,CAAC;AAEW,QAAA,WAAW,GAAG,CAAC,GAAU,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC3E,IAAI,GAAG,YAAY,4BAAe,EAAE;QAClC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KAC9C;SAAM;QACL,IAAI,CAAC,GAAG,CAAC,CAAC;KACX;AACH,CAAC,CAAC;AAEW,QAAA,WAAW,GAAG,CAAC,GAAU,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC3E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;KAC/C;SAAM;QACL,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACjC;AACH,CAAC,CAAC","sourcesContent":["import { Response, NextFunction } from 'express';\nimport { HTTP404Error, HTTPClientError } from './httpErrors';\n\nexport const notFoundError = () => {\n  throw new HTTP404Error('Method Not found');\n};\n\nexport const clientError = (err: Error, res: Response, next: NextFunction) => {\n  if (err instanceof HTTPClientError) {\n    console.warn(err);\n    res.status(err.statusCode).send(err.message);\n  } else {\n    next(err);\n  }\n};\n\nexport const serverError = (err: Error, res: Response, next: NextFunction) => {\n  console.log(err);\n  if (process.env.NODE_ENV === 'production') {\n    res.status(500).send('Internal Server Error');\n  } else {\n    res.status(500).send(err.stack);\n  }\n};\n"]}