{"version":3,"file":"pdf.controller.js","sourceRoot":"","sources":["pdf.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;AACA,oDAA4B;AAC5B,+CAAyC;AAEzC,gBAAM,CAAC,MAAM,EAAE,CAAC;AAChB,MAAM,EAAC,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,WAAW,EAAC,GAAG,OAAO,CAAC,GAAG,CAAC;AAEtD,MAAa,aAAa;;AACf,qBAAO,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACnD,IAAI,EAAC,GAAG,EAAE,IAAI,EAAC,GAAG,GAAG,CAAC,IAAI,CAAC;IAC3B,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE;QAChB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;KAC9B;IACD,wEAAwE;IACxE,MAAM,OAAO,GAAG,MAAM,wBAAU,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACxE,GAAG,CAAC,IAAI,CAAC;QACL,MAAM,EAAE,+BAA+B;QACvC,YAAY,EAAE,UAAU,IAAI,IAAI,IAAI,IAAI,OAAO,EAAE;KACpD,CAAC,CAAA;AACN,CAAC,CAAA,CAAC;AAGK,8BAAgB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC5D,IAAI,EAAC,IAAI,EAAE,kBAAkB,EAAE,YAAY,EAAC,GAAG,GAAG,CAAC,IAAI,CAAC;IACxD,IAAI,CAAC,CAAE,IAAI,IAAI,kBAAkB,IAAI,YAAY,CAAC,EAAE;QAChD,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;KAC9B;IACD,MAAM,IAAI,GAAG,MAAM,wBAAU,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IACtD,MAAM,OAAO,GAAG,MAAM,wBAAU,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAG,kBAAkB,EAAE,IAAI,CAAC,CAAC;IACxF,GAAG,CAAC,IAAI,CAAC;QACL,MAAM,EAAE,+BAA+B;QACvC,YAAY,EAAE,UAAU,IAAI,IAAI,IAAI,IAAI,OAAO,EAAE;KACpD,CAAC,CAAA;AACN,CAAC,CAAA,CAAC;AAGK,8BAAgB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC5D,IAAI,EAAC,IAAI,EAAE,cAAc,EAAE,YAAY,EAAC,GAAG,GAAG,CAAC,IAAI,CAAC;IACpD,IAAI,CAAC,CAAE,IAAI,IAAI,cAAc,IAAI,YAAY,CAAC,EAAE;QAC5C,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;KAC9B;IACD,MAAM,IAAI,GAAG,MAAM,wBAAU,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IACtD,MAAM,OAAO,GAAG,MAAM,wBAAU,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAG,IAAI,EAAE,cAAc,CAAC,CAAC;IACpF,GAAG,CAAC,IAAI,CAAC;QACL,MAAM,EAAE,+BAA+B;QACvC,YAAY,EAAE,UAAU,IAAI,IAAI,IAAI,IAAI,OAAO,EAAE;KACpD,CAAC,CAAA;AACN,CAAC,CAAA,CAAC;AAxCN,sCA8EC;AAED,kBAAe,aAAa,CAAC","sourcesContent":["import {Request, Response} from 'express';\nimport dotenv from 'dotenv';\nimport {PdfService} from './pdf.service';\n\ndotenv.config();\nconst {PORT = 3000, Host = 'localhost'} = process.env;\n\nexport class PdfController {\n    static fromURL = async (req: Request, res: Response) => {\n        let {url, name} = req.body;\n        if (!(url || name)) {\n            res.sendStatus(400).send();\n        }\n        //  createPdf(data, name, templateFromURL, templatePath, templateAsHtml)\n        const pdfPath = await PdfService.createPdf(null, name, url, null, null);\n        res.send({\n            status: 'Successfully created PDF file',\n            downloadPath: `http://${Host}:${PORT}/${pdfPath}`\n        })\n    };\n\n\n    static fromTemplatePath = async (req: Request, res: Response) => {\n        let {name, predefinedTemplate, dataEndpoint} = req.body;\n        if (!( name || predefinedTemplate || dataEndpoint)) {\n            res.sendStatus(400).send();\n        }\n        const data = await PdfService.FetchData(dataEndpoint);\n        const pdfPath = await PdfService.createPdf(data, name, null,  predefinedTemplate, null);\n        res.send({\n            status: 'Successfully created PDF file',\n            downloadPath: `http://${Host}:${PORT}/${pdfPath}`\n        })\n    };\n\n\n    static fromTemplateHTML = async (req: Request, res: Response) => {\n        let {name, templateAsHTML, dataEndpoint} = req.body;\n        if (!( name || templateAsHTML || dataEndpoint)) {\n            res.sendStatus(400).send();\n        }\n        const data = await PdfService.FetchData(dataEndpoint);\n        const pdfPath = await PdfService.createPdf(data, name, null , null, templateAsHTML);\n        res.send({\n            status: 'Successfully created PDF file',\n            downloadPath: `http://${Host}:${PORT}/${pdfPath}`\n        })\n    };\n\n\n\n    // static generatePdf = async (url, fileName) => {\n    //     const browser = await puppeteer.launch({\n    //         defaultViewport: null,\n    //         headless: true,\n    //     });\n    //\n    //     const page = await browser.newPage();\n    //     await page.goto(url, {waitUntil: 'networkidle2'});\n    //     await page.waitFor(3000);\n    //     // await page.type('[name=\"username\"]', 'NUWAN')\n    //     // await page.type('[name=\"password\"]', 'PASSWORD')\n    //     // await page.click('[type=\"submit\"]')\n    //     //await page.waitForNavigation();\n    //     //await page.waitFor(3000);\n    //\n    //     // await page.setViewport({\n    //     //     width: 1280,\n    //     //     height: 2000,\n    //     //     deviceScaleFactor: 2\n    //     // });\n    //\n    //\n    //     const name = `public/${fileName}-${new Date().getTime()}.pdf`;\n    //\n    //     await page.pdf({\n    //         path: name,\n    //         format: 'A4',\n    //         printBackground: true,\n    //         preferCSSPageSize: true\n    //     });\n    //     await page.close();\n    //     console.info('Yes we printed the page');\n    //     await browser.close();\n    // }\n}\n\nexport default PdfController;\n"]}